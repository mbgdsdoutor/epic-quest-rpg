{"version":3,"sources":["webpack:///src/app/out-of-session/adventures/adventure/adventure.component.ts","webpack:///src/app/out-of-session/adventures/adventure/adventure.component.html","webpack:///src/app/out-of-session/adventures/my-adventures/my-adventures.component.ts","webpack:///src/app/out-of-session/adventures/my-adventures/my-adventures.component.html","webpack:///src/app/out-of-session/adventures/new-adventure/new-adventure.component.ts","webpack:///src/app/out-of-session/adventures/new-adventure/new-adventure.component.html","webpack:///src/app/out-of-session/components/bottom-navbar/bottom-navbar.component.ts","webpack:///src/app/out-of-session/components/bottom-navbar/bottom-navbar.component.html","webpack:///src/app/out-of-session/components/sidebar/sidebar.component.ts","webpack:///src/app/out-of-session/components/sidebar/sidebar.component.html","webpack:///src/app/out-of-session/components/top-navbar/top-navbar.component.ts","webpack:///src/app/out-of-session/components/top-navbar/top-navbar.component.html","webpack:///src/app/out-of-session/home/home.component.ts","webpack:///src/app/out-of-session/home/home.component.html","webpack:///src/app/out-of-session/out-of-session.component.ts","webpack:///src/app/out-of-session/out-of-session.component.html","webpack:///src/app/out-of-session/out-of-session.module.ts","webpack:///src/app/out-of-session/out-of-session.routing.module.ts","webpack:///src/app/out-of-session/reports-and-statistics/reports-and-statistics.component.ts","webpack:///src/app/out-of-session/reports-and-statistics/reports-and-statistics.component.html","webpack:///src/app/out-of-session/services/notification.service.ts","webpack:///src/app/out-of-session/settings/settings.component.ts","webpack:///src/app/out-of-session/settings/settings.component.html","webpack:///src/app/out-of-session/social/explore/explore.component.ts","webpack:///src/app/out-of-session/social/explore/explore.component.html","webpack:///src/app/out-of-session/social/profile/profile.component.ts","webpack:///src/app/out-of-session/social/profile/profile.component.html","webpack:///src/app/shared/adventure-icon.ts","webpack:///src/app/shared/broken-axe-icon.ts","webpack:///src/app/shared/cog-icon.ts","webpack:///src/app/shared/exit-icon.ts","webpack:///src/app/shared/maps-icon.ts","webpack:///src/app/shared/master-icon.ts","webpack:///src/app/shared/notification-icon.ts","webpack:///src/app/shared/person-icon.ts","webpack:///src/app/shared/rules-icon.ts","webpack:///src/app/shared/torch-icon.ts"],"names":["AdventureComponent","tokenService","notificationService","loadingService","alertService","adventureService","adventures","searchedAdventures","adventuresIdNotification","loggedUser","getLoggedUser","startLoadingBar","findAll","subscribe","response","aventurasDisponiveis","filter","a","mapIds","users","map","u","id","mestre","includes","stopLoadingBar","err","error","event","searchText","currentTarget","value","length","adventure","name","toLowerCase","userName","handleSearchAdventure","selector","templateUrl","styleUrls","MyAdventuresComponent","user","findByUserId","handleSearchUser","NewAdventureComponent","userService","allUsers","adventureUsers","idsMap","getFriends","f","e","add","display","adventureName","description","adventureDescription","photoUrl","adventurePhotoUrl","console","log","saveAdventure","success","BottomNavbarComponent","router","menu","activeUrl","url","navigateByUrl","navigateTo","SidebarComponent","tokenStorageService","userId","document","querySelector","classList","signOut","navigate","openRules","logout","TopNavbarComponent","notifications","isNotificationsOpened","notification","index","startLocalLoading","aceptFriend","res","el","stopLocalLoading","status","bodyClasses","contains","remove","switchTheme","toggleNotificationOpen","HomeComponent","OutOfSessionComponent","OutOfSessionModule","provide","useClass","multi","imports","declarations","providers","HOME","path","component","canActivate","SETTINGS","REPORTS_AND_STATISTICS","SOCIAL","PROFILE","ADVENTURES","MY_ADVENTURES","NEW_ADVENTURE","outOfSessionRoutes","children","pathMatch","redirectTo","OutOfSessionRoutingModule","forChild","exports","ReportsAndStatisticsComponent","styles","NotificationService","httpClient","get","post","pipe","SettingsComponent","ExploreComponent","searchedUsers","usersIdNotification","allNotifications","isLoading","friends","friendList","email","addFriend","push","ProfileComponent","activatedRoute","isEditing","isEditable","routeReuseStrategy","shouldReuseRoute","events","evt","navigated","urlId","parseInt","snapshot","params","findById","userToSave","updateUser","toggleIsEditing","AdventureIcon","template","BrokenAxeIcon","CogIcon","ExitIcon","MapsIcon","MasterIcon","NotificationIcon","PersonIcon","RulesIcon","TorchIcon"],"mappings":"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","file":"out-of-session-out-of-session-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from 'src/app/shared/alert.service';\r\nimport { LoadingService } from 'src/app/shared/loading/loading.service';\r\nimport { TokenStorageService } from 'src/app/token-storage.service';\r\nimport { Adventure } from '../../../shared/models/adventure';\r\nimport { Notification, NotificationStatus, NotificationType } from '../../models/notification';\r\nimport { User } from '../../models/user';\r\nimport { AdventureService } from '../../services/adventure.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-adventure',\r\n  templateUrl: './adventure.component.html',\r\n  styleUrls: ['./adventure.component.scss']\r\n})\r\n\r\nexport class AdventureComponent implements OnInit {\r\n\r\n  adventures: Adventure[] = [];\r\n  searchedAdventures: Adventure[] = [];\r\n  adventuresIdNotification: number[] = [];\r\n  loggedUser: User;\r\n\r\n  constructor(\r\n    private tokenService: TokenStorageService,\r\n    private notificationService: NotificationService,\r\n    private loadingService: LoadingService,\r\n    private alertService: AlertService,\r\n    private adventureService: AdventureService) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedUser = this.tokenService.getLoggedUser();\r\n    this.loadingService.startLoadingBar();\r\n    this.adventureService.findAll().subscribe(response => {\r\n      const aventurasDisponiveis = response.filter(a => {\r\n        const mapIds = a.users.map(u => u.id)\r\n        return a.mestre.id !== this.loggedUser.id && !mapIds.includes(this.loggedUser.id)\r\n      })\r\n      this.adventures = aventurasDisponiveis;\r\n      this.searchedAdventures = this.adventures;\r\n      this.loadingService.stopLoadingBar();\r\n    }, (err) => {\r\n      this.loadingService.stopLoadingBar();\r\n      this.alertService.error('Erro ao buscar aventuras.');\r\n    });\r\n  }\r\n\r\n  handleSearchAdventure(event): void {\r\n    const searchText = event.currentTarget.value;\r\n    if (searchText.length > 0) {\r\n      this.searchedAdventures = this.adventures.filter(adventure => {\r\n        return adventure.name.toLowerCase().includes(searchText.toLowerCase()) || adventure.mestre.userName.toLowerCase().includes(searchText.toLowerCase());\r\n      });\r\n    } else {\r\n      this.searchedAdventures = this.adventures;\r\n    }\r\n  }\r\n\r\n  handleSendNotification(adventure: Adventure) {\r\n    // const notification: Notification = {\r\n    //   from: loggedUser,\r\n    //   to: adventure.mestre,\r\n    //   status: NotificationStatus.Created,\r\n    //   type: NotificationType.FriendList,\r\n    //   adventureName: adventure.name\r\n    // }\r\n    // this.notificationService.createNotification(notification).subscribe(response => {\r\n    //   this.adventuresIdNotification.push(adventure.id);\r\n    // })\r\n  }\r\n}\r\n","<div class=\"container\">\n  <h2 class=\"adventure-creation-link text-theme-black\">\n    Quer ser o mestre da sua própria aventura?\n    <b [routerLink]=\"['/adventures/new']\">Crie uma nova aventura agora.</b>\n  </h2>\n  <div class=\"user-search-box\">\n    <i class=\"material-icons text-theme-black\">search</i>\n    <input\n      class=\"input\"\n      type=\"text\"\n      placeholder=\"Digite o nome do mestre ou da aventura\"\n      (input)=\"handleSearchAdventure($event)\"\n    />\n  </div>\n  <div class=\"user-container\" *ngIf=\"adventures.length > 0\">\n    <div class=\"user bg-theme\" *ngFor=\"let adventure of searchedAdventures\">\n      <button\n        class=\"button--outline text-theme-black\"\n        (click)=\"handleSendNotification(adventure)\"\n      >\n        <span *ngIf=\"!adventuresIdNotification.includes(adventure.id)\"\n          >Solicitar participação</span\n        >\n        <span *ngIf=\"adventuresIdNotification.includes(adventure.id)\"\n          >Participação Solicitada</span\n        >\n      </button>\n      <img class=\"user-img\" [src]=\"adventure.photoUrl\" />\n      <div class=\"user-info text-theme-black\">\n        <p class=\"user-info-name\">{{ adventure.name }}</p>\n        <p class=\"user-info-email\">\n          <b>Mestre: </b>\n          <span\n            *ngIf=\"adventure.mestre\"\n            [routerLink]=\"['/social/profile/' + adventure.mestre.id]\"\n            >{{ adventure.mestre.userName }}</span\n          >\n        </p>\n        <p class=\"user-info-email\">\n          <b>Participantes: </b\n          ><span\n            *ngFor=\"let player of adventure.users\"\n            [routerLink]=\"['/social/profile/' + player.id]\"\n            >{{ player.userName }}</span\n          >\n        </p>\n        <p class=\"user-info-description\">{{ adventure.description }}</p>\n      </div>\n    </div>\n  </div>\n  <div class=\"user-container\" *ngIf=\"adventures.length === 0\">\n    Não foi encontrada nenhuma aventura.\n    <b [routerLink]=\"['/adventures/new']\"\n      >Crie a sua propria aventura com seus amigos!</b\n    >\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoadingService } from 'src/app/shared/loading/loading.service';\r\nimport { TokenStorageService } from 'src/app/token-storage.service';\r\nimport { usersMock } from 'src/app/utils/mocks';\r\nimport { Adventure } from '../../../shared/models/adventure';\r\nimport { User } from '../../models/user';\r\nimport { AdventureService } from '../../services/adventure.service';\r\n\r\n@Component({\r\n  selector: 'app-my-adventures',\r\n  templateUrl: './my-adventures.component.html',\r\n  styleUrls: ['./my-adventures.component.scss']\r\n})\r\n\r\nexport class MyAdventuresComponent implements OnInit {\r\n\r\n  user: User;\r\n  adventures: Adventure[] = [];\r\n  searchedAdventures: Adventure[] = [];\r\n\r\n  constructor(\r\n    private loadingService: LoadingService,\r\n    private tokenService: TokenStorageService,\r\n    private adventureService: AdventureService) { }\r\n\r\n  ngOnInit() {\r\n    // this.user = this.tokenService.getLoggedUser();\r\n    this.user = usersMock[0];\r\n    this.adventureService.findByUserId(2).subscribe(response => {\r\n      this.adventures = response;\r\n      this.searchedAdventures = this.adventures;\r\n    })\r\n  }\r\n\r\n  handleSearchUser(event): void {\r\n    const searchText = event.currentTarget.value\r\n    if (searchText.length > 0) {\r\n      this.searchedAdventures = this.adventures.filter(adventure => {\r\n        return adventure.name.toLowerCase().includes(searchText.toLowerCase()) || adventure.mestre.userName.toLowerCase().includes(searchText.toLowerCase())\r\n      })\r\n    } else {\r\n      this.searchedAdventures = this.adventures;\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\n  <h2 class=\"adventure-creation-link text-theme-black\">\n    Deseja criar uma nova aventura?\n    <b [routerLink]=\"['/adventures/new']\">Crie uma nova aventura agora.</b>\n  </h2>\n  <div class=\"user-search-box\">\n    <i class=\"material-icons text-theme-black\">search</i>\n    <input\n      class=\"input\"\n      type=\"text\"\n      placeholder=\"Digite o nome do mestre ou da aventura\"\n      (input)=\"handleSearchUser($event)\"\n    />\n  </div>\n  <div class=\"adventure-container\">\n    <div\n      class=\"adventure bg-theme\"\n      *ngFor=\"let adventure of searchedAdventures\"\n    >\n      <div class=\"adventure-header\">\n        <img [src]=\"adventure.photoUrl\" />\n        <div class=\"adventure-header-info\">\n          <h2>{{ adventure.name }}</h2>\n          <p class=\"user-info-email text-theme-black\">\n            <b>Mestre: </b>\n            <span [routerLink]=\"['/social/profile/' + adventure.mestre.id]\">{{\n              adventure.mestre.userName\n            }}</span>\n          </p>\n          <p class=\"user-info-email text-theme-black\">\n            <b>Participantes: </b\n            ><span\n              *ngFor=\"let player of adventure.users\"\n              [routerLink]=\"['/social/profile/' + player.id]\"\n              >{{ player.userName }}</span\n            >\n          </p>\n        </div>\n        <div\n          class=\"master-emblem bg-theme\"\n          *ngIf=\"adventure.mestre.id === user.id\"\n        >\n          <master-icon width=\"28\" height=\"28\"></master-icon>\n        </div>\n      </div>\n      <div\n        class=\"player-info\"\n        *ngFor=\"let player of adventure.players\"\n        [ngStyle]=\"{ order: player.userId === user.id ? -1 : 1 }\"\n      >\n        <h4\n          class=\"text-theme-black\"\n          [ngStyle]=\"{\n            'font-size': player.userId === user.id ? '18px' : '14px'\n          }\"\n        >\n          {{ player.name }}, Lv.{{ player.nivel }}\n        </h4>\n        <div class=\"player-status\">\n          <div\n            class=\"player-status-profile\"\n            [ngClass]=\"{ 'my-character': player.userId === user.id }\"\n          >\n            <img [src]=\"player.photoUrl\" class=\"border-theme\" />\n            <div class=\"player-status-profile-points\">\n              <div class=\"life-points border-theme\">\n                <span\n                  >HP: {{ player.lifePoints }} /\n                  {{ player.totalLifePoints }}</span\n                >\n                <div\n                  class=\"life-points-bar\"\n                  [ngStyle]=\"{\n                    width:\n                      '' +\n                      (player.lifePoints * 100) / player.totalLifePoints +\n                      '%'\n                  }\"\n                ></div>\n              </div>\n              <div class=\"mana-points border-theme\">\n                <span\n                  >MP: {{ player.manaPoints }} /\n                  {{ player.totalManaPoints }}</span\n                >\n                <div\n                  class=\"mana-points-bar\"\n                  [ngStyle]=\"{\n                    width:\n                      '' +\n                      (player.manaPoints * 100) / player.totalManaPoints +\n                      '%'\n                  }\"\n                ></div>\n              </div>\n            </div>\n            <div class=\"player-status-profile-info\">\n              <img\n                [src]=\"'../assets/images/' + player.class.id + '.jpeg'\"\n                alt=\"class-icon\"\n              />\n              <p class=\"text-theme-black\">\n                {{ player.race.name }} <br />\n                {{ player.class.name }}\n              </p>\n            </div>\n            <ul class=\"status\" *ngIf=\"player.userId === user.id\">\n              <li><span>FOR:</span> {{ player.strength }}</li>\n              <li><span>CON:</span> {{ player.constitution }}</li>\n              <li><span>SAB:</span> {{ player.wisdom }}</li>\n              <li><span>DES:</span> {{ player.dexterity }}</li>\n              <li><span>INT:</span>&nbsp; {{ player.intelligence }}</li>\n              <li><span>CAR:</span> {{ player.charisma }}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"master-actions\">\n        <button\n          *ngIf=\"adventure.mestre.id === user.id\"\n          class=\"button--outline text-theme-black\"\n          [routerLink]=\"['/session/' + adventure.id]\"\n        >\n          Iniciar Sessão\n        </button>\n        <button\n          *ngIf=\"adventure.mestre.id !== user.id\"\n          class=\"button--outline text-theme-black\"\n          [routerLink]=\"['/session/' + adventure.id]\"\n        >\n          Entrar na Sessão\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/authentication/services/user.service';\r\nimport { AlertService } from 'src/app/shared/alert.service';\r\nimport { LoadingService } from 'src/app/shared/loading/loading.service';\r\nimport { Adventure } from 'src/app/shared/models/adventure';\r\nimport { TokenStorageService } from 'src/app/token-storage.service';\r\nimport { User } from '../../models/user';\r\nimport { AdventureService } from '../../services/adventure.service';\r\n\r\n@Component({\r\n  selector: 'app-new-adventure',\r\n  templateUrl: './new-adventure.component.html',\r\n  styleUrls: ['./new-adventure.component.scss']\r\n})\r\n\r\nexport class NewAdventureComponent implements OnInit {\r\n\r\n  users: { display: string, value: number }[] = [];\r\n  allUsers: User[] = [];\r\n  loggedUser: User;\r\n  //form aventura\r\n  adventureName: string;\r\n  adventureDescription: string;\r\n  adventureUsers: { display: string, value: number }[] = [];\r\n  adventurePhotoUrl: string;\r\n\r\n  constructor(\r\n    private tokenService: TokenStorageService,\r\n    private userService: UserService,\r\n    private loadingService: LoadingService,\r\n    private alertService: AlertService,\r\n    private adventureService: AdventureService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedUser = this.tokenService.getLoggedUser();\r\n    let idsMap = [];\r\n    this.userService.findAll().subscribe(response => {\r\n      this.allUsers = response;\r\n      this.userService.getFriends().subscribe(f => {\r\n        idsMap = f.map(e => e.id)\r\n      }).add(() => {\r\n        this.users = response.map(e => {\r\n          return { display: e.userName, value: e.id }\r\n        }).filter(u => idsMap.includes(u.value));\r\n      })\r\n\r\n      // this.adventureUsers = response;\r\n      // this.users = response.filter(e => e.id !== this.loggedUser.id && idsMap.includes(e.id))\r\n    })\r\n  }\r\n\r\n  saveAdventure() {\r\n    this.loadingService.startLoadingBar();\r\n    const adventure: Adventure = {\r\n      name: this.adventureName,\r\n      description: this.adventureDescription,\r\n      photoUrl: this.adventurePhotoUrl,\r\n      users: this.allUsers.filter(u => this.adventureUsers.map(e => e.value).includes(u.id)),\r\n      mestre: this.allUsers.filter(u => u.id === this.loggedUser.id)[0]\r\n    }\r\n    console.log('salvando aventura: ', adventure)\r\n    this.adventureService.saveAdventure(adventure).subscribe(response => {\r\n      console.log('AVENTURA CRIADA!! ', response)\r\n      this.loadingService.stopLoadingBar();\r\n      this.alertService.success('aventura criada com sucesso.');\r\n    }, (err) => {\r\n      this.loadingService.stopLoadingBar();\r\n      this.alertService.error('erro ao criar aventura.')\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\n  <!--  -->\n\n  <div class=\"auth-form-container\">\n    <!--[formGroup]=\"form\"-->\n    <div class=\"register-form-header\">\n      <h3>Criar uma nova aventura</h3>\n    </div>\n    <div class=\"auth-form\">\n      <div class=\"field\">\n        <label for=\"name\">Nome</label>\n        <input\n          class=\"input\"\n          [(ngModel)]=\"adventureName\"\n          placeholder=\"nome da aventura\"\n          id=\"name\"\n        />\n      </div>\n\n      <div class=\"field\">\n        <label for=\"foto\">Foto</label>\n        <input\n          class=\"input\"\n          [(ngModel)]=\"adventurePhotoUrl\"\n          placeholder=\"foto da aventura\"\n          id=\"foto\"\n        />\n      </div>\n\n      <div class=\"field\">\n        <label for=\"description\">Descrição</label>\n        <textarea\n          class=\"input\"\n          [(ngModel)]=\"adventureDescription\"\n          placeholder=\"descrição da aventura\"\n          id=\"description\"\n        ></textarea>\n      </div>\n\n      <div class=\"field\">\n        <label for=\"players\">Participantes</label>\n        <tag-input\n          [placeholder]=\"'+ jogador'\"\n          [secondaryPlaceholder]=\"'adicionar um jogador'\"\n          [(ngModel)]=\"adventureUsers\"\n          [identifyBy]=\"'id'\"\n          [displayBy]=\"'userName'\"\n          [onlyFromAutocomplete]=\"true\"\n        >\n          <tag-input-dropdown\n            [showDropdownIfEmpty]=\"true\"\n            [autocompleteItems]=\"users\"\n          >\n          </tag-input-dropdown>\n        </tag-input>\n      </div>\n\n      <div class=\"auth-form-actions\">\n        <button class=\"button--primary\" (click)=\"saveAdventure()\">\n          Criar Aventura\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'bottom-navbar',\n  templateUrl: './bottom-navbar.component.html',\n  styleUrls: ['./bottom-navbar.component.scss']\n})\nexport class BottomNavbarComponent {\n\n  constructor(private router: Router) { }\n\n  isActive(menu: string) {\n    const activeUrl = this.router.url\n    if(activeUrl === '/home' && menu === 'home') return true\n    else if(activeUrl === '/reports' && menu === 'reports') return true\n    else if(activeUrl === '/settings' && menu === 'settings') return true\n    return false\n  }\n\n  navigateTo(url: string) {\n    this.router.navigateByUrl(url)\n  }\n}\n","<div class=\"bottom-navbar\">\n  <div class=\"bottom-navbar-item--main\" (click)=\"navigateTo('/home')\" [ngClass]=\"{'active': isActive('home')}\">\n    <i class=\"material-icons\">home</i>\n  </div>\n  <div class=\"bottom-navbar-item\" [ngClass]=\"{'active': isActive('')}\">\n    <i class=\"material-icons\">list</i>\n  </div>\n  <div class=\"bottom-navbar-item\" (click)=\"navigateTo('/reports')\" [ngClass]=\"{'active': isActive('reports')}\">\n    <i class=\"material-icons\">bar_chart</i>\n  </div>\n  <div class=\"bottom-navbar-item\" [ngClass]=\"{'active': isActive('')}\">\n    <i class=\"material-icons\">person</i>\n  </div>\n  <div class=\"bottom-navbar-item\" (click)=\"navigateTo('/settings')\" [ngClass]=\"{'active': isActive('settings')}\">\n    <i class=\"material-icons\">settings</i>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { TokenStorageService } from 'src/app/token-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n\n  userId: number\n\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.userId = this.tokenStorageService.getLoggedUser().id\n  }\n\n  openRules() {\n    document.querySelector('#rules').classList.add('showModal');\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut()\n    this.router.navigate(['/auth/login']);\n  }\n}\n","<div class=\"sidebar bg-theme text-theme\">\n  <div class=\"sidebar-header\">\n    <img src=\"../../../../assets/images/epicquest.png\" alt=\"logo\" />\n  </div>\n  <!-- <div class=\"sidebar-section bg-theme-hover\" [routerLink]=\"['/home']\">\n    <adventure-icon width=\"28\" height=\"30\"></adventure-icon>\n    <span>Home</span>\n  </div> -->\n  <div class=\"sidebar-section bg-theme-hover\">\n    <adventure-icon width=\"28\" height=\"30\"></adventure-icon>\n    <span>Aventuras</span>\n  </div>\n  <ul class=\"sidebar-section-options\">\n    <li class=\"bg-theme-hover\" [routerLink]=\"['/adventures/mine']\">\n      Minhas Aventuras\n    </li>\n    <li class=\"bg-theme-hover\" [routerLink]=\"['/adventures/list']\">Explorar</li>\n    <li class=\"bg-theme-hover\" [routerLink]=\"['/adventures/new']\">\n      Criar Aventura\n    </li>\n  </ul>\n  <div class=\"sidebar-section bg-theme-hover\" (click)=\"openRules()\">\n    <rules-icon width=\"28\" height=\"28\"></rules-icon>\n    <span>Regras</span>\n  </div>\n  <!-- <div class=\"sidebar-section bg-theme-hover\">\n    <maps-icon width=\"28\" height=\"28\"></maps-icon>\n    <span>Criador de Mapas</span>\n  </div> -->\n  <div class=\"sidebar-section bg-theme-hover\">\n    <cog-icon width=\"26\" height=\"26\"></cog-icon>\n    <span>Social</span>\n  </div>\n  <ul class=\"sidebar-section-options\">\n    <li class=\"bg-theme-hover\" [routerLink]=\"['/social/profile/' + userId]\">\n      Meu Perfil\n    </li>\n    <li class=\"bg-theme-hover\" [routerLink]=\"['/social/explore']\">Explorar</li>\n  </ul>\n  <!-- <div class=\"sidebar-section bg-theme-hover\">\n    <cog-icon width=\"26\" height=\"26\"></cog-icon>\n    <span>Configurações</span>\n  </div> -->\n  <div class=\"sidebar-section bg-theme-hover\" (click)=\"logout()\">\n    <exit-icon width=\"26\" height=\"26\"></exit-icon>\n    <span>Sair</span>\n  </div>\n  <!-- <ul class=\"sidebar-section-options\">\n      <li>\n        <adventure-icon width=\"28\" height=\"30\"></adventure-icon>\n        <span>Aventuras</span>\n      </li>\n      <li>\n        <rules-icon width=\"28\" height=\"28\"></rules-icon>\n        <span>Regras</span>\n      </li>\n      <li>\n        <maps-icon width=\"28\" height=\"28\"></maps-icon>\n        <span>Criador de Mapas</span>\n      </li>\n      <li>\n        <cog-icon width=\"26\" height=\"26\"></cog-icon>\n        <span>Configurações</span>\n      </li>\n    </ul> -->\n  <!-- <div class=\"sidebar-section\">\n    <p class=\"sidebar-section-title\">configurações</p>\n    <ul class=\"sidebar-section-options\">\n      <li>\n        <person-icon width=\"24\" height=\"24\"></person-icon>\n        <span>editar dados</span>\n      </li>\n      <li>\n        <notification-icon width=\"26\" height=\"26\"></notification-icon>\n        <span>gerenciar notificações</span>\n      </li>\n      <li>\n        <cog-icon width=\"26\" height=\"26\"></cog-icon>\n        <span>sobre esta versão</span>\n      </li>\n      <li>\n        <help-icon width=\"26\" height=\"26\"></help-icon>\n        <span>ajuda</span>\n      </li>\n      <li>\n        <exit-icon width=\"26\" height=\"26\"></exit-icon>\n        <span>sair</span>\n      </li>\n    </ul>\n  </div> -->\n</div>\n","import { Component } from '@angular/core';\nimport { UserService } from 'src/app/authentication/services/user.service';\nimport { LoadingService } from 'src/app/shared/loading/loading.service';\nimport { TokenStorageService } from 'src/app/token-storage.service';\nimport { NotificationReturn, NotificationStatus } from '../../models/notification';\nimport { User } from '../../models/user';\nimport { NotificationService } from '../../services/notification.service';\n\n@Component({\n  selector: 'top-navbar',\n  templateUrl: './top-navbar.component.html',\n  styleUrls: ['./top-navbar.component.scss']\n})\nexport class TopNavbarComponent {\n\n  constructor(\n    private loadingService: LoadingService,\n    private userService: UserService,\n    private tokenService: TokenStorageService,\n    private notificationService: NotificationService) { }\n\n  notifications: NotificationReturn[] = [];\n  isNotificationsOpened: boolean = false;\n  loggedUser: User;\n\n  ngOnInit() {\n    this.loggedUser = this.tokenService.getLoggedUser();\n    console.log(this.loggedUser)\n    this.notificationService.findByUserId(this.loggedUser.id).subscribe(response => {\n      console.log('MADOKA NOTIFICATIONS!', response)\n      this.notifications = response;\n    })\n  }\n\n  toggleNotificationOpen() {\n    this.isNotificationsOpened = !this.isNotificationsOpened;\n  }\n\n  aceptNotification(notification: NotificationReturn, index: number) {\n    this.loadingService.startLocalLoading(`.notifications-list > div:nth-child(${index + 1})`)\n    this.userService.aceptFriend(notification.userId).subscribe(res => {\n      console.log('ADICIONADO!!!!', res);\n      this.notifications = this.notifications.filter(el => el.id !== notification.id);\n      this.loadingService.stopLocalLoading(`.notifications-list > div:nth-child(${index + 1})`);\n\n    })\n  }\n\n  updateNotification(notification: Notification, status: string) {\n\n    // const notificationIndex = this.notifications.indexOf(notification) + 1;\n    // this.loadingService.startLocalLoading(`.notifications-list > div:nth-child(${notificationIndex})`)\n    // const updatedNotification: Notification = { ...notification, status: status as NotificationStatus }\n    // this.notificationService.updateNotification(updatedNotification).subscribe(response => {\n    //   this.notifications = this.notifications.filter(el => el.id !== response.id);\n    //   this.loadingService.stopLocalLoading(`.notifications-list > div:nth-child(${notificationIndex})`);\n    // })\n  }\n\n  switchTheme() {\n    const bodyClasses = document.querySelector('body').classList\n    if (bodyClasses.contains('light-theme')) {\n      bodyClasses.remove('light-theme')\n      bodyClasses.add('dark-theme')\n    } else {\n      bodyClasses.remove('dark-theme')\n      bodyClasses.add('light-theme')\n    }\n  }\n}\n","<div class=\"top-navbar bg-theme text-theme\">\n  <div class=\"top-navbar-left-content\">\n    <div class=\"theme-switcher\" (click)=\"switchTheme()\">\n      <torch-icon width=\"32\" heigth=\"32\"></torch-icon>\n      <div class=\"magic bg-theme\"></div>\n    </div>\n  </div>\n  <div class=\"top-navbar-right-content\">\n    <div class=\"top-navbar-right-content-options\">\n      <div class=\"notifications\">\n        <i (click)=\"toggleNotificationOpen()\" class=\"material-icons\"\n          >notifications_none</i\n        >\n        <div\n          (click)=\"toggleNotificationOpen()\"\n          *ngIf=\"notifications.length > 0\"\n          class=\"notifications-quantity\"\n        >\n          {{ notifications.length }}\n        </div>\n        <div\n          *ngIf=\"isNotificationsOpened\"\n          class=\"notifications-list bg-theme text-theme\"\n        >\n          <div *ngFor=\"let notification of notifications; let i = index\">\n            <img\n              class=\"notification-user-photo\"\n              [src]=\"notification.userId.photoUrl\"\n            />\n            <p class=\"notification-description\">\n              <span *ngIf=\"notification.userId\"\n                >{{ notification.userId.userName }} gostaria de ser seu amigo no\n                Epic Quest RPG.</span\n              >\n              <span *ngIf=\"notification.adventure\"\n                >{{ notification.userId.userName }} gostaria de participar da\n                sua aventura {{ notification.adventure.name }}.</span\n              >\n            </p>\n            <div class=\"notification-options\">\n              <button (click)=\"aceptNotification(notification, i)\">\n                aceitar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"top-navbar-right-content-info\">\n      <div>\n        <p>{{ loggedUser.fullName }}</p>\n        <p>Disponível</p>\n      </div>\n      <img [src]=\"loggedUser.photoUrl\" alt=\"minha foto\" />\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n"," <div class=\"container\">\n  <!-- <div class=\"adventure-button\">\n    <img src=\"assets/images/new-adventure.png\" alt=\"nova aventura\" />\n    <div>Começar uma aventura</div>\n  </div>\n  <div class=\"adventure-button\">\n    <img src=\"assets/images/continue-adventure.png\" alt=\"continuar aventura\" />\n    <div>Continuar uma aventura</div>\n  </div> -->\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-out-of-session',\r\n  templateUrl: './out-of-session.component.html',\r\n  styleUrls: ['./out-of-session.component.scss']\r\n})\r\nexport class OutOfSessionComponent {\r\n\r\n  constructor() { }\r\n}\r\n","<top-navbar></top-navbar>\n<sidebar></sidebar>\n<div class=\"content\">\n  <router-outlet></router-outlet>\n</div>\n<bottom-navbar></bottom-navbar>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OutOfSessionRoutingModule } from './out-of-session.routing.module';\r\nimport { OutOfSessionComponent } from './out-of-session.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { BottomNavbarComponent } from './components/bottom-navbar/bottom-navbar.component';\r\nimport { TopNavbarComponent } from './components/top-navbar/top-navbar.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { AdventureIcon } from '../shared/adventure-icon';\r\nimport { MapsIcon } from '../shared/maps-icon';\r\nimport { RulesIcon } from '../shared/rules-icon';\r\nimport { ExitIcon } from '../shared/exit-icon';\r\nimport { BrokenAxeIcon } from '../shared/broken-axe-icon';\r\nimport { CogIcon } from '../shared/cog-icon';\r\nimport { NotificationIcon } from '../shared/notification-icon';\r\nimport { PersonIcon } from '../shared/person-icon';\r\nimport { TorchIcon } from '../shared/torch-icon';\r\nimport { ExploreComponent } from './social/explore/explore.component';\r\nimport { ProfileComponent } from './social/profile/profile.component';\r\nimport { AdventureComponent } from './adventures/adventure/adventure.component';\r\nimport { MyAdventuresComponent } from './adventures/my-adventures/my-adventures.component';\r\nimport { NewAdventureComponent } from './adventures/new-adventure/new-adventure.component';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport { MasterIcon } from '../shared/master-icon';\r\nimport { UserService } from '../authentication/services/user.service';\r\nimport { AdventureService } from './services/adventure.service';\r\nimport { NotificationService } from './services/notification.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Interceptor } from '../interceptor';\r\n\r\n@NgModule({\r\n  imports: [\r\n    OutOfSessionRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    TagInputModule,\r\n  ],\r\n  declarations: [\r\n    OutOfSessionComponent,\r\n    HomeComponent,\r\n    BottomNavbarComponent,\r\n    TopNavbarComponent,\r\n    SidebarComponent,\r\n    SettingsComponent,\r\n    ExploreComponent,\r\n    ProfileComponent,\r\n    AdventureComponent,\r\n    MyAdventuresComponent,\r\n    NewAdventureComponent,\r\n    //icons\r\n    AdventureIcon,\r\n    RulesIcon,\r\n    MapsIcon,\r\n    ExitIcon,\r\n    BrokenAxeIcon,\r\n    CogIcon,\r\n    NotificationIcon,\r\n    PersonIcon,\r\n    TorchIcon,\r\n    MasterIcon\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    AdventureService,\r\n    NotificationService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: Interceptor, multi: true }\r\n  ]\r\n})\r\nexport class OutOfSessionModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Route, RouterModule, Routes } from '@angular/router';\r\nimport { OutOfSessionComponent } from './out-of-session.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from '../auth.guard';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { ReportsAndStatisticsComponent } from './reports-and-statistics/reports-and-statistics.component';\r\nimport { ExploreComponent } from './social/explore/explore.component';\r\nimport { ProfileComponent } from './social/profile/profile.component';\r\nimport { AdventureComponent } from './adventures/adventure/adventure.component';\r\nimport { NewAdventureComponent } from './adventures/new-adventure/new-adventure.component';\r\nimport { MyAdventuresComponent } from './adventures/my-adventures/my-adventures.component';\r\n\r\nconst HOME: Route = {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst SETTINGS: Route = {\r\n    path: 'settings',\r\n    component: SettingsComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst REPORTS_AND_STATISTICS: Route = {\r\n    path: 'reports',\r\n    component: ReportsAndStatisticsComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst SOCIAL: Route = {\r\n    path: 'social/explore',\r\n    component: ExploreComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst PROFILE: Route = {\r\n    path: 'social/profile/:id',\r\n    component: ProfileComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst ADVENTURES: Route = {\r\n    path: 'adventures/list',\r\n    component: AdventureComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst MY_ADVENTURES: Route = {\r\n    path: 'adventures/mine',\r\n    component: MyAdventuresComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nconst NEW_ADVENTURE: Route = {\r\n    path: 'adventures/new',\r\n    component: NewAdventureComponent,\r\n    canActivate: [ AuthGuard ]\r\n};\r\n\r\nexport const outOfSessionRoutes: Routes = [\r\n    {\r\n      path: '',\r\n      component: OutOfSessionComponent,\r\n      children: [\r\n          {\r\n            path: '',\r\n            pathMatch: 'full',\r\n            redirectTo: 'home'\r\n          },\r\n          HOME,\r\n          SETTINGS,\r\n          REPORTS_AND_STATISTICS,\r\n          SOCIAL,\r\n          PROFILE,\r\n          ADVENTURES,\r\n          MY_ADVENTURES,\r\n          NEW_ADVENTURE\r\n      ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(outOfSessionRoutes),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        CommonModule\r\n    ],\r\n    exports: [ RouterModule ]\r\n})\r\n\r\nexport class OutOfSessionRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports-and-statistics',\n  templateUrl: './reports-and-statistics.component.html',\n  styles: [``]\n})\n\nexport class ReportsAndStatisticsComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {\n\n  }\n}\n","<p>Em breve!</p>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { notificationsMock } from 'src/app/utils/mocks';\nimport { Notification, NotificationReturn } from '../models/notification';\nimport { delay } from 'rxjs/operators';\nimport { User } from '../models/user';\n\nconst url = 'http://localhost:8085/api/v1/notification';\n\n@Injectable()\nexport class NotificationService {\n    constructor(private httpClient: HttpClient) { }\n\n    public findByUserId(userId: number): Observable<NotificationReturn[]> {\n        return this.httpClient.get<NotificationReturn[]>(`${url}/getById/${userId}`);\n        //return of(notificationsMock);\n    }\n\n    public findAll(): Observable<NotificationReturn[]> {\n        return this.httpClient.get<NotificationReturn[]>(`${url}/getAll`);\n        //return of(notificationsMock);\n    }\n\n    public createNotification(notification: Notification): Observable<Notification> {\n        return this.httpClient.post<Notification>(`${url}/create`, notification);\n    }\n\n    public updateNotification(notification: Notification): Observable<Notification> {\n        // return this.httpClient.put<Notification>(`${url}/`, notification);\n        return of(notificationsMock[0]).pipe(delay(2000))\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/token-storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styles: [``]\n})\n\nexport class SettingsComponent implements OnInit {\n\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut()\n    this.router.navigate(['/auth/login']);\n  }\n}\n","<ul>\n  <li>tema</li>\n  <li>editar dados</li>\n  <li>gerenciar notificações</li>\n  <li>sobre esta versão</li>\n  <li>ajuda</li>\n  <li (click)=\"logout()\">sair</li>\n</ul>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../models/user';\r\nimport { UserService } from 'src/app/authentication/services/user.service';\r\nimport { LoadingService } from 'src/app/shared/loading/loading.service';\r\nimport { TokenStorageService } from 'src/app/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-explore',\r\n  templateUrl: './explore.component.html',\r\n  styleUrls: ['./explore.component.scss']\r\n})\r\n\r\nexport class ExploreComponent implements OnInit {\r\n\r\n  loggedUser: User;\r\n  users: User[] = [];\r\n  searchedUsers: User[] = [];\r\n  usersIdNotification: number[] = [];\r\n  allNotifications = [];\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private tokenService: TokenStorageService,\r\n    private loadingService: LoadingService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingService.startLoadingBar();\r\n    this.isLoading = true;\r\n    this.loggedUser = this.tokenService.getLoggedUser();\r\n    this.userService.getFriends().subscribe(friends => {\r\n      this.loggedUser.friendList = friends;\r\n    }).add(() => {\r\n      this.userService.findAll().subscribe(response => {\r\n        let idsMap = [];\r\n        if (this.loggedUser.friendList && this.loggedUser.friendList.length > 0) {\r\n          idsMap = this.loggedUser.friendList.map(e => e.id)\r\n        }\r\n\r\n        this.users = response.filter(u => u.id !== this.loggedUser.id && !idsMap.includes(u.id));\r\n        this.searchedUsers = this.users;\r\n      }).add(() => {\r\n        this.loadingService.stopLoadingBar();\r\n        this.isLoading = false;\r\n      });\r\n    })\r\n  }\r\n\r\n  handleSearchUser(event): void {\r\n    const searchText = event.currentTarget.value;\r\n    if (searchText.length > 0) {\r\n      this.searchedUsers = this.users.filter(user => {\r\n        return user.userName.toLowerCase().includes(searchText.toLowerCase()) || user.email.toLowerCase().includes(searchText.toLowerCase());\r\n      });\r\n    } else {\r\n      this.searchedUsers = this.users;\r\n    }\r\n  }\r\n\r\n  handleSendNotification(user: User) {\r\n    this.userService.addFriend(user).subscribe(response => {\r\n      console.log(response)\r\n      this.usersIdNotification.push(user.id);\r\n    })\r\n  }\r\n}\r\n","<div class=\"container\">\n  <div class=\"user-search-box\">\n    <i class=\"material-icons text-theme-black\">search</i>\n    <input\n      class=\"input\"\n      type=\"text\"\n      placeholder=\"Digite o nome ou e-mail do usuário\"\n      (input)=\"handleSearchUser($event)\"\n    />\n  </div>\n  <div class=\"user-container\">\n    <h2 *ngIf=\"searchedUsers.length === 0 && !isLoading\">\n      Não foram encontrados usuários.\n    </h2>\n    <div class=\"user bg-theme\" *ngFor=\"let user of searchedUsers\">\n      <button class=\"bg-theme-hover\" (click)=\"handleSendNotification(user)\">\n        <i\n          class=\"material-icons text-theme-black\"\n          *ngIf=\"!usersIdNotification.includes(user.id)\"\n          >person_add</i\n        >\n        <i\n          class=\"material-icons text-theme-black\"\n          *ngIf=\"usersIdNotification.includes(user.id)\"\n          >how_to_reg</i\n        >\n      </button>\n      <img\n        class=\"user-img\"\n        [src]=\"user.photoUrl ? user.photoUrl : 'assets/images/pinguim.png'\"\n      />\n      <div class=\"user-info text-theme-black\">\n        <p class=\"user-info-name\">{{ user.userName }}</p>\n        <p class=\"user-info-email\">{{ user.email }}</p>\n        <p class=\"user-info-description\">{{ user.description }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { TokenStorageService } from 'src/app/token-storage.service';\r\nimport { User } from '../../models/user';\r\nimport { UserService } from 'src/app/authentication/services/user.service';\r\nimport { LoadingService } from 'src/app/shared/loading/loading.service';\r\nimport { AlertService } from 'src/app/shared/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\n\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  isEditing = false;\r\n  isEditable = false;\r\n  user: User;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private loadingService: LoadingService,\r\n    private alertService: AlertService,\r\n    private userService: UserService,\r\n    private tokenService: TokenStorageService) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\r\n      return false;\r\n    };\r\n    this.router.events.subscribe((evt) => {\r\n      if (evt instanceof NavigationEnd) {\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const urlId = parseInt(this.activatedRoute.snapshot.params.id, 10);\r\n    if (this.tokenService.getLoggedUser().id === urlId) {\r\n      this.isEditable = true;\r\n    }\r\n    this.loadingService.startLoadingBar();\r\n    this.userService.findById(urlId).subscribe(response => {\r\n      this.user = response;\r\n      this.userService.getFriends().subscribe(friends => {\r\n        this.loadingService.stopLoadingBar();\r\n        this.user.friendList = friends;\r\n        console.log('SOMOS AMIGOS DO PEITO', friends)\r\n      })\r\n    }, (err) => {\r\n      this.loadingService.stopLoadingBar();\r\n      this.alertService.error('Erro ao buscar usuário.');\r\n    });\r\n  }\r\n\r\n  toggleIsEditing() {\r\n    this.isEditing = !this.isEditing;\r\n  }\r\n\r\n  updateUser() {\r\n    this.loadingService.startLoadingBar();\r\n    let userToSave = { ...this.user };\r\n    delete userToSave.friendList;\r\n    console.log(this.user)\r\n    this.userService.updateUser(userToSave).subscribe(response => {\r\n      this.loadingService.stopLoadingBar();\r\n      this.alertService.success('Usuário salvo com sucesso.')\r\n    }, (err) => {\r\n      this.alertService.success('Erro ao salvar usuário.')\r\n      this.loadingService.stopLoadingBar();\r\n    })\r\n    this.toggleIsEditing();\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"user\">\n  <div class=\"profile-card box-shadow-theme bg-theme text-theme\">\n    <button\n      *ngIf=\"isEditable && !isEditing\"\n      (click)=\"toggleIsEditing()\"\n      class=\"edit-photo info bg-theme-hover text-theme-black\"\n    >\n      <i class=\"material-icons\">edit</i>\n    </button>\n\n    <img class=\"profile-card-img\" [src]=\"user.photoUrl\" alt=\"profile picture\" />\n    <h4 *ngIf=\"!isEditing\" class=\"profile-card-title text-theme-black\">\n      {{ user.userName }}\n    </h4>\n    <div *ngIf=\"isEditing\" class=\"profile-card-info\" style=\"margin-top: 16px\">\n      <label>nome</label>\n      <input\n        class=\"input text-theme-black\"\n        type=\"text\"\n        [(ngModel)]=\"user.userName\"\n      />\n    </div>\n    <div class=\"profile-card-info\">\n      <label>e-mail</label>\n      <p *ngIf=\"!isEditing\" class=\"text-theme-black\">{{ user.email }}</p>\n      <input\n        *ngIf=\"isEditing\"\n        class=\"input text-theme-black\"\n        type=\"text\"\n        [(ngModel)]=\"user.email\"\n      />\n    </div>\n    <div *ngIf=\"isEditing\" class=\"profile-card-info\">\n      <label>foto</label>\n      <input\n        class=\"input text-theme-black\"\n        type=\"text\"\n        [(ngModel)]=\"user.photoUrl\"\n      />\n    </div>\n    <div class=\"profile-card-info\">\n      <label>sobre</label>\n      <p *ngIf=\"!isEditing\" class=\"text-theme-black\">{{ user.description }}</p>\n      <textarea\n        *ngIf=\"isEditing\"\n        style=\"resize: none\"\n        class=\"input text-theme-black\"\n        type=\"text\"\n        [(ngModel)]=\"user.description\"\n      ></textarea>\n    </div>\n    <div *ngIf=\"isEditing\" class=\"profile-card-actions\">\n      <button class=\"button--default\" (click)=\"toggleIsEditing()\">\n        Cancelar\n      </button>\n      <button class=\"button--primary\" (click)=\"updateUser()\">Salvar</button>\n    </div>\n  </div>\n  <div class=\"profile-group-card\">\n    <div class=\"profile-card box-shadow-theme bg-theme text-theme\">\n      <h4 class=\"profile-card-title text-theme-black\">amigos</h4>\n      <div class=\"friends-container\">\n        <div class=\"friend\" *ngFor=\"let friend of user.friendList\">\n          <img [src]=\"friend.photoUrl\" alt=\"friend photo\" />\n          <p>{{ friend.userName }}</p>\n          <span [routerLink]=\"['/social/profile/' + friend.id]\"\n            >Ver<br />Perfil</span\n          >\n        </div>\n        <div\n          *ngIf=\"!user.friendList || user.friendList.length === 0\"\n          class=\"empty-content\"\n        >\n          <broken-axe-icon width=\"80\" height=\"80\"></broken-axe-icon>\n          <p class=\"text-theme-black\">\n            Ops! Este usuário ainda não adicionou nenhum amigo.\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"profile-card box-shadow-theme bg-theme text-theme\">\n      <h4 class=\"profile-card-title text-theme-black\">\n        aventuras e conquistas\n      </h4>\n      <div class=\"empty-content\">\n        <broken-axe-icon width=\"80\" height=\"80\"></broken-axe-icon>\n        <p class=\"text-theme-black\">\n          Ops! Este usuário ainda não participa de nenhuma aventura.\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'adventure-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" fill-opacity=\"1\" d=\"M66.54 18.002c-.327-.007-.655-.005-.98.006-4.064.136-8.105 1.634-11.39 4.535-7.508 6.632-8.218 18.094-1.586 25.602 4.394 4.974 10.906 6.945 16.986 5.792l57.838 65.475-50.373 44.498 24.188 27.38c9.69-21.368 22.255-39.484 37.427-54.65l6.91 36.188c25.092-6.29 49.834-10.563 74.366-12.873l-23.912-27.07-38.66-12.483c17.117-12.9 36.734-22.97 58.62-30.474l-24.19-27.385-50.37 44.496-57.92-65.57c1.79-5.835.617-12.43-3.72-17.34-3.498-3.96-8.34-6.03-13.235-6.128zm384.397 0c-4.895.1-9.735 2.168-13.232 6.127-4.338 4.91-5.514 11.506-3.723 17.343l-57.92 65.568-50.37-44.497-24.188 27.385c21.884 7.504 41.5 17.573 58.62 30.472l-38.66 12.485-23.255 26.324c24.71 1.863 49.367 5.706 74.118 11.46l6.498-34.03c15.173 15.166 27.74 33.282 37.43 54.65l24.185-27.38-50.372-44.498 57.838-65.475c6.08 1.153 12.593-.818 16.987-5.792 6.63-7.508 5.92-18.97-1.586-25.602-3.285-2.9-7.326-4.4-11.39-4.535-.326-.01-.653-.013-.98-.006zm-186.425 158.51c-39.56-.098-79.467 5.226-120.633 16.095-2.046 90.448 34.484 209.35 118.47 259.905 81.295-49.13 122.402-169.902 120.552-259.914-39.75-10.496-78.91-15.988-118.39-16.086zm-117.176 153.5L60.47 428.35l-12.2 63.894 61.9-19.994 68.49-77.535c-12.86-20.108-23.246-42.03-31.324-64.703zm228.203 6.11c-8.69 22.238-19.577 43.634-32.706 63.142l64.473 72.986 61.898 19.994-12.2-63.894-81.466-92.23z\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class AdventureIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'broken-axe-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M246.8 35.58l25.5 52.5 24.8-22.9-50.3-29.6zm109.1 13.41l-10.3 9.51 52.9 57.3 10.3-9.5-52.9-57.31zm-30.3 14.37l-57.3 52.94 66.5 72 57.3-53-66.5-71.94zM181.8 93.33l-19.5 49.17L196 187l-14.2-93.67zM75.81 127l-32.42 13.8 94.41 52.1L75.81 127zm186.09 8.9l-16.2 15-32 44.1 62.7-18.2-33.6 70.7 32.4-17.8 39.6-36.6-52.9-57.2zm232.1 2.4c-3.1.8-6.1 1.6-9.2 2.3-25.7 5.9-51.9 8.5-74.5 2.3l-69.4 64.2c4.5 23-.2 48.9-8.1 74.1-8.7 27.5-21.6 54.1-32.9 75.4 60.6 17.3 133-11.2 187.1-61.1 2.4-2.2 4.7-4.5 7-6.7V138.3zM76.71 232.6l-18.78 37.6 72.57-21.6-53.79-16zm117.19 48l-24 51.8-21-34.4-47.2 196H182l37.2-154.6-25.7 29.5.4-88.3z\" fill=\"#fff\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class BrokenAxeIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cog-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M234.875 18.78c-26.087 2.367-51.557 8.56-74.875 18.782 15.37 32.763 14.222 66.706-6.72 82.407-20.835 15.617-54.055 7.965-81.124-15.69-16.246 19.452-29.336 41.36-38.875 65.626 33.83 12.333 56.635 37.665 52.94 63.5-3.698 25.835-32.697 43.74-68.626 46.094 2.338 25.796 8.91 50.778 18.937 73.875 17.81-8.182 35.793-11.09 51.095-8.938 13.032 1.87 23.927 7.015 31.156 16.657 15.817 21.097 7.603 54.713-16.78 81.97 19.516 16.35 42.216 29.444 66.594 39.03 12.33-33.828 37.655-56.634 63.5-52.938 25.844 3.697 43.74 32.696 46.094 68.625 26.087-2.365 51.557-8.555 74.875-18.78-15.766-32.997-14.26-67.588 6.843-83.406 9.64-7.23 22.568-9.022 35.594-7.125 15.112 2.16 31.19 10.25 45.563 22.78 16.088-19.345 29.4-41.51 38.875-65.594-33.83-12.332-56.635-37.653-52.938-63.5 3.697-25.846 32.665-43.772 68.594-46.125-2.36-25.944-8.774-50.663-18.906-73.874-32.612 15.117-66.66 13.145-82.282-7.687-15.696-20.944-7.252-53.86 16.688-81-19.52-16.352-42.248-29.447-66.625-39.032-12.332 33.828-37.657 56.66-63.5 52.968-25.846-3.693-43.744-32.696-46.095-68.625zm21.656 95.126c79.626 0 144.376 64.752 144.376 144.375 0 79.626-64.75 144.376-144.375 144.376-79.624 0-144.374-64.75-144.374-144.375 0-79.624 64.75-144.374 144.375-144.374zm0 18.688c-69.524 0-125.686 56.162-125.686 125.687 0 69.526 56.162 125.69 125.687 125.69 69.526 0 125.69-56.164 125.69-125.69 0-69.522-56.164-125.686-125.69-125.686zm.033 15.125c61.094 0 110.625 49.53 110.625 110.624 0 61.095-49.53 110.625-110.625 110.625s-110.625-49.53-110.625-110.626c0-61.095 49.53-110.625 110.625-110.625z\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class CogIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'exit-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M217 28.098v455.804l142-42.597V70.697zm159.938 26.88l.062 2.327V87h16V55zM119 55v117.27h18V73h62V55zm258 50v16h16v-16zm0 34v236h16V139zm-240 58.727V233H41v46h96v35.273L195.273 256zM244 232c6.627 0 12 10.745 12 24s-5.373 24-12 24-12-10.745-12-24 5.373-24 12-24zM137 339.73h-18V448h18zM377 393v14h16v-14zm0 32v23h16v-23zM32 471v18h167v-18zm290.652 0l-60 18H480v-18z\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class ExitIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'maps-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" fill-opacity=\"1\" d=\"M242.563 27.656c-10.062.033-20.126.205-30.188.5l6.094 65.594-61.095-62.563c-31.256 2.57-62.494 6.655-93.75 12.532l34.25 28.405-48.063-.563c35.158 100.168 6.936 182.575-.312 292l95.75 105.844c10-1.326 19.856-2.423 29.563-3.344l21.53-42.156 18.532 28.844 41.5-33.594.813 43.094c82.943-.242 157.734 9.098 235.687 7.813-28.15-73.01-31.13-143.562-31.875-209.157l-33.25-19.125 32.688-33.874c-.43-21.333-1.342-42.006-3.625-61.937l-57.438.718 50.25-41.657c-3.843-15.477-9.052-30.4-16.125-44.718l-29.53-23.906c-53.8-5.488-107.607-8.924-161.408-8.75zm58.718 36.97l7.095 16.624 24.594 57.625 14.092-19.75 8.344-11.688 7.313 12.376 40.655 69.124-16.125 9.47-33.375-56.688-42.438 59.405-15.187-10.875 24-33.594-21.97-51.406-24.56 40.063 11.967 22.625-16.53 8.75-18.25-34.5-24.845 58.187-17.187-7.344 32.53-76.186 7.69-18.03 9.155 17.31 5.313 10.032 28.25-46.125 9.468-15.405zm-194.842 56.25h.093l.126.03.094.03 4.78 1.126.095.032.125.03 4.53 1.19.126.03.125.03 4.282 1.25.126.032.124.03 4.094 1.314.125.03.126.064.22.062-5.845 16.53-.343 1.095h-.03l-.22-.06-3.562-1.157-.25-.063-3.813-1.125-.25-.063-4.062-1.062-.22-.063-4.343-1-.093-.03-.125-.032 1.155-4.906 2.813-13.345zm37.874 13.374l2.657 1.53.186.095.156.125 2.657 1.656.155.125.188.126 2.437 1.688.188.125.187.155 2.28 1.75.19.125.155.156 2.125 1.78.156.158.19.156 1.936 1.844.188.156.156.188.844.875-13.53 12.875-.47-.5-.375-.344-1.22-1.156-.094-.094-.25-.22L144 156.44l-.156-.125-.188-.157-1.562-1.22-.188-.124-.156-.125-1.78-1.218-.314-.19-.03-.03-2.282-1.438L135 150.47l9.313-16.22zM173 166.625l.25.844.063.25.093.25.5 2.06.063.22.03.25.406 2.063.03.25.064.25.28 2.062.032.22v.25l.188 2.06.03.22v.22l.095 2.06v2.72l-.03.188-.095 2.062v.22l-.03.186-.19 2.064v.156l-.03.188-.156 1.156-18.53-2.406.124-.782.03-.344.126-1.343v-.064l.03-.312.064-1.688v-1.687l-.063-1.19-.125-1.593-.28-2.062-.314-1.563-.375-1.406-.03-.156-.125-.344 17.875-5.53zm-21.25 35.72l17.28 7.06-1.093 2.657-.062.157-.063.155-1.625 3.625-.062.125-.063.125-1.687 3.47-.03.093-.064.093-1.686 3.344-.063.063-.03.062-1.688 3.156-.03.064-.032.062-.313.563-16.343-9.064.25-.437.062-.126 1.53-2.875.095-.157 1.532-2.97.094-.218 1.47-3.03.124-.25 1.406-3.095.125-.313.97-2.343zm-16.47 34.093l17.69 6.03-.157.407-.032.063-1.03 3.5-.906 3.437-.03.22-.064.186-.656 3.314-.438 2.687-.03.22-.032.25-.188 1.906-18.594-2 .282-2.375v-.25l.03-.218.595-3.593.03-.22.03-.188.782-3.718.032-.22.062-.186.97-3.844.03-.188.063-.187 1.186-3.94.063-.186.06-.188.25-.72zm207.845 17.375l.875.093h.22l.186.03 1.906.25.22.033.187.03 1.874.344.187.03.22.032 1.813.406.218.063.19.063 1.78.468.22.063.186.06 1.72.564.218.062.22.063 1.655.624.217.094.188.093 1.625.69.22.092.186.094 1.594.75.188.125.218.095 1.53.844.19.092.187.125 1.218.75-9.75 15.938-1.124-.688-.094-.062-.75-.406-.406-.19-.75-.405-.187-.063-.22-.125-1.25-.5-.844-.312-1.28-.438-.282-.062-.156-.063-.938-.25-.344-.062-.062-.03-1-.22-1.47-.28-.218-.033-.187-.03-1.44-.188h-.06l-.5-.033 1.655-18.625zm-21.22 1.5l2.376 11.875 1.47 6.437-.188.03-2 .44-.156.03-.094.03-2 .533-.218.062-2.094.594-.22.062-2.155.688-.22.062-2.217.75-.22.094-2.312.844-.187.062-2.158.844-6.812-17.406 2.344-.906.094-.063.125-.03 2.687-.97.094-.063.125-.03 2.624-.876.125-.062.092-.03 2.594-.814.125-.03.095-.033 2.563-.718.093-.033.126-.03 2.5-.657.125-.03.126-.032 2.438-.532.125-.03.124-.032.062-.03zM284 271.156l10.97 15.156-1.72 1.22-.094.093-.094.063-3.156 2.156-.094.062-.125.063-3.218 2.092-.095.063-.094.063-3.28 2-.094.062-.125.063-3.31 1.906-.095.06-.125.064-1.063.594-8.937-16.407.875-.5.188-.092 2.937-1.688.22-.125 2.874-1.75.187-.125 2.814-1.844.22-.125 2.936-2.03 1.5-1.094zm-133.53 2.72l.124.437.062.28.47 1.376.06.124.908 2.187.062.19.594 1.186.125.22.844 1.5.124.187.97 1.437.092.125L156 284.53l.094.095 1.28 1.406-13.81 12.595-1.376-1.5-.22-.22-.187-.25-1.624-2.03-.187-.25-.19-.28-1.468-2.158-.187-.25-.156-.28-1.345-2.282-.156-.28-.157-.283-1.188-2.375-.125-.312-.125-.28-1.03-2.5-.126-.314-.095-.31-.875-2.595-.094-.313-.094-.312-.187-.72 18.094-4.655zm230.31 3.312l.845 1.312.063.156.093.125.97 1.69.063.124.093.125.938 1.75.062.124.063.156.905 1.78.063.126.062.125.844 1.876.062.125.063.095.81 1.938.033.125.062.093.78 1.97.033.125.062.125.75 2.03.03.095.033.094.718 2.092.033.094.03.125.157.5-17.813 5.626-.093-.312-.094-.22-.563-1.655-.062-.22-.594-1.594-.092-.22-.594-1.53-.094-.22-.625-1.436-.094-.25-.624-1.375-.125-.25-.655-1.313-.125-.25-.656-1.218-.156-.25-.657-1.156-.186-.282-.656-1.062 15.843-9.906zm-127.405 10.906l6.97 17.344-3 1.218-.095.03-.094.033-3.594 1.342-.093.063-.126.03-3.594 1.25-.094.033-.125.03-3.624 1.188-.094.03-.093.033-3.657 1.092-.094.032-.095.03-.188.032-4.968-18 .186-.062 3.25-.97.188-.062 3.22-1.03.217-.063 3.407-1.22v.03l3.188-1.217.22-.094 2.78-1.126zm-83.75 6.156l.25.125.063.03 2.218.876.375.126 1.97.688.25.062.156.063 2.094.592.125.032.22.062 2.56.625 2.314.5.186.033.156.03 2.75.438-1.468 8.72-.094.5-1.22 9.28-.186-.03-.156-.03-3.063-.533-.188-.03-.156-.032-3.03-.625-.156-.03-.188-.033-2.937-.718-.157-.064-.188-.062-2.844-.813-.186-.06-.22-.064-2.75-.937-.186-.064-.22-.094-2.655-1.03-.188-.094-.22-.094-.655-.28 7.625-17.064zm49.938 3.53l2.843 18.47-3.344.5-.125.03h-.125l-3.562.47h-.125l-.094.03-3.56.345-.126.03h-.125l-3.5.283h-.251l-3.47.187h-.25l-1.156.03-.406-18.686.906-.033h.25l2.97-.156 3.25-.217v-.032l3.31-.31.19-.033h.06l3.095-.406.124-.03h.094l3.125-.47zm174.5 18l.375 2.376.03.125v.158l.72 5.218v.125l.03.126.563 5.406v.219l.47 5.564-18.625 1.5-.438-5.344-.03-.22-.5-4.905v-.063l-.032-.218-.625-4.656-.03-.282-.376-2.125 18.47-3zM326.5 346.595c18.893 3.46 44.913 16.187 68.875 33.875 7.46-9.835 14.425-20.4 21.313-31.095l30.062 12.97c-4.686 12.21-14.99 25.518-28.563 37.186 17.017 16.166 30.87 34.515 37 52.94-13.806-18.108-31.07-31.73-50.28-42.814-23.387 15.846-52.682 25.93-79.626 20.438 22.915-4.383 40.644-16.56 55.814-32.594-16.462-7.504-33.798-13.877-51.25-20.094l-3.344-30.812z\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class MapsIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'master-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M319.61 20.654c13.145 33.114 13.144 33.115-5.46 63.5 33.114-13.145 33.116-13.146 63.5 5.457-13.145-33.114-13.146-33.113 5.457-63.498-33.114 13.146-33.113 13.145-63.498-5.459zM113.024 38.021c-11.808 21.04-11.808 21.04-35.724 24.217 21.04 11.809 21.04 11.808 24.217 35.725 11.808-21.04 11.808-21.04 35.724-24.217-21.04-11.808-21.04-11.808-24.217-35.725zm76.55 56.184c-.952 50.588-.95 50.588-41.991 80.18 50.587.95 50.588.95 80.18 41.99.95-50.588.95-50.588 41.99-80.18-50.588-.95-50.588-.95-80.18-41.99zm191.177 55.885c-.046 24.127-.048 24.125-19.377 38.564 24.127.047 24.127.046 38.566 19.375.047-24.126.046-24.125 19.375-38.564-24.126-.047-24.125-.046-38.564-19.375zm-184.086 83.88c-1.191.024-2.36.07-3.492.134-18.591 1.064-41.868 8.416-77.445 22.556L76.012 433.582c78.487-20.734 132.97-21.909 170.99-4.615V247.71c-18.076-8.813-31.79-13.399-46.707-13.737a91.166 91.166 0 0 0-3.629-.002zm122.686 11.42c-2.916-.026-5.81.011-8.514.098-12.81.417-27.638 2.215-45.84 4.522V427.145c43.565-7.825 106.85-4.2 171.244 7.566l-39.78-177.197c-35.904-8.37-56.589-11.91-77.11-12.123zm2.289 16.95c18.889.204 36.852 2.768 53.707 5.02l4.437 16.523c-23.78-3.75-65.966-4.906-92.467-.98l-.636-17.805c11.959-2.154 23.625-2.88 34.959-2.758zm-250.483 4.658l-10.617 46.004h24.094l10.326-46.004H71.158zm345.881 0l39.742 177.031 2.239 9.973 22.591-.152-40.855-186.852h-23.717zm-78.857 57.82c16.993.026 33.67.791 49.146 2.223l3.524 17.174c-32.645-3.08-72.58-2.889-102.995 0l-.709-17.174c16.733-1.533 34.04-2.248 51.034-2.223zm-281.793 6.18l-6.924 30.004h24.394l6.735-30.004H56.389zm274.418 27.244c4.656.021 9.487.085 14.716.203l2.555 17.498c-19.97-.471-47.115.56-59.728 1.05l-.7-17.985c16.803-.493 29.189-.828 43.157-.766zm41.476.447c8.268.042 16.697.334 24.121.069l2.58 17.74c-8.653-.312-24.87-.83-32.064-.502l-2.807-17.234a257.25 257.25 0 0 1 8.17-.073zm-326.97 20.309l-17.985 77.928 25.035-.17 17.455-77.758H45.313zm303.164 11.848c19.608-.01 38.66.774 56.449 2.572l2.996 20.787c-34.305-4.244-85.755-7.697-119.1-3.244l-.14-17.922c20.02-1.379 40.186-2.183 59.795-2.193zm-166.606 44.05c-30.112.09-67.916 6.25-115.408 19.76l-7.22 2.053 187.759-1.27v-6.347c-16.236-9.206-37.42-14.278-65.13-14.196zm134.41 6.174c-19.63.067-37.112 1.439-51.283 4.182v10.064l177.594-1.203c-44.322-8.634-89.137-13.17-126.31-13.043zM26 475v18h460v-18H26z\" fill=\"#fff\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class MasterIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'notification-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M254.125 26.188c-17.377-.003-31.66 14.28-31.656 31.656 0 7.617 2.733 14.64 7.28 20.125-10.79 3.876-19.043 10.963-26.906 22.06-13.057 18.43-23.687 49.03-35.406 92.782-10.257 38.29-24.345 57.012-34.657 70.563-10.31 13.55-16.252 20.325-16.25 42.688.002 3.5 1.975 7.314 8.44 12.03 6.463 4.717 16.877 9.383 29.905 13.188 26.055 7.612 62.442 11.962 100.25 11.97 19.384.004 38.368-1.15 55.78-3.28v.124c12.13-1.043 33.332-3.898 51.345-10.28 5.795-2.055 11.28-4.422 16.125-7.533 2.612-1.376 4.947-2.747 6.875-4.155 6.458-4.714 8.438-8.523 8.438-12.03-.004-22.363-5.935-29.135-16.25-42.69-10.316-13.553-24.42-32.27-34.688-70.56-11.732-43.757-22.343-74.35-35.406-92.782-8.225-11.607-16.895-18.836-28.438-22.594 4.31-5.41 6.908-12.24 6.906-19.626-.002-17.377-14.31-31.654-31.687-31.657zm0 18.687c7.278 0 13 5.694 13 12.97 0 7.272-5.722 12.97-13 12.968-7.278-.002-12.968-5.696-12.97-12.97 0-7.273 5.693-12.97 12.97-12.968zm9.22 43.22c34.616 10.188 49.56 64.686 58.124 101.56 14.99 64.56 45.652 82.98 53.03 111.25-.327.633-1.002 1.286-2.094 2.408-2.665 2.74-8.816 6.216-16.406 8.906-7.366 2.61-16 4.614-24.188 6.124-1.73-38.024-33.765-53.55-33.25-107.47.603-63.043-17.19-103.352-39.5-121.78 1.468-.233 2.886-.57 4.282-1zm-206.876 91.28C23.546 223.947 11.19 289.253 28.874 355.25c18.208 67.957 63.562 118.994 116.313 140.03-38.592-30.418-72.26-83.223-89.75-148.5-16.674-62.228-14.924-122.366 1.03-167.405zm399.436 0c15.955 45.04 17.705 105.177 1.03 167.406-17.49 65.277-51.157 118.082-89.748 148.5 52.75-21.036 98.135-72.073 116.343-140.03 17.686-65.997 5.298-131.303-27.624-175.875zM105.687 210.28c-29.71 34.43-42.433 83.74-29.343 132.595 13.478 50.306 50.845 87.082 95.5 101.156-32.19-21.55-59.46-60.02-72.406-108.342-12.344-46.066-8.896-91.175 6.25-125.407zm301.032 0c15.144 34.233 18.56 79.342 6.217 125.407-12.947 48.322-40.185 86.793-72.375 108.344 44.655-14.073 81.99-50.85 95.47-101.155 13.09-48.856.396-98.166-29.313-132.594zM146.53 348.25c1.218 12.736 11.944 22.686 25 22.688 9.422 0 17.642-5.173 21.94-12.844-15.986-2.11-30.823-5.08-43.814-8.875-1.06-.31-2.09-.65-3.125-.97z\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class NotificationIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'person-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M119.1 25v.1c-25 3.2-47.1 32-47.1 68.8 0 20.4 7.1 38.4 17.5 50.9L99.7 157 84 159.9c-13.7 2.6-23.8 9.9-32.2 21.5-8.5 11.5-14.9 27.5-19.4 45.8-8.2 33.6-9.9 74.7-10.1 110.5h44l11.9 158.4h96.3L185 337.7h41.9c0-36.2-.3-77.8-7.8-111.7-4-18.5-10.2-34.4-18.7-45.9-8.6-11.4-19.2-18.7-34.5-21l-16-2.5L160 144c10-12.5 16.7-30.2 16.7-50.1 0-39.2-24.8-68.8-52.4-68.8-2.9 0-4.7-.1-5.2-.1zM440 33c-17.2 0-31 13.77-31 31s13.8 31 31 31 31-13.77 31-31-13.8-31-31-31zM311 55v48H208v18h103v158h-55v18h55v110H208v18h103v32h80.8c-.5-2.9-.8-5.9-.8-9 0-3.1.3-6.1.8-9H329V297h62.8c-.5-2.9-.8-5.9-.8-9 0-3.1.3-6.1.8-9H329V73h62.8c-.5-2.92-.8-5.93-.8-9 0-3.07.3-6.08.8-9H311zm129 202c-17.2 0-31 13.8-31 31s13.8 31 31 31 31-13.8 31-31-13.8-31-31-31zm0 160c-17.2 0-31 13.8-31 31s13.8 31 31 31 31-13.8 31-31-13.8-31-31-31z\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class PersonIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'rules-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M161.22 19.563l-2.5 5.375-106.44 225.5-1 2.093c-24.493 28.208-34.917 58.587-33.593 88.19 1.38 30.852 15.12 60.388 36.376 86.81l2.812 3.5h49.72c4.817-3.836 8.93-7.817 12.405-12.03 1.758-2.132 3.38-4.358 4.875-6.656H65.97c-17.813-23.187-28.526-47.848-29.626-72.438-1.123-25.11 7.337-50.594 29.937-76.125H498.157l-5.25-12.874-91.844-225.5-2.375-5.843H161.22zm11.843 18.687h177.343l52.656 41.594 38.407 94.28-58.845 70.94H75.47L173.062 38.25zM75.156 282.625c-15.31 18.98-20.975 37.778-20.125 56.438.84 18.398 8.276 36.95 20.5 54.468h57.19c4.392-13.517 6.344-29.847 6.78-50.436h-16.188v-18.688h16.313v-.187h115.749v.186h17.156v18.688h-17.25c-.287 17.8-1.447 34.638-4 50.437h221.626c-9.034-36.872-9.112-74.006-.03-110.905H75.155zm83 60.28c-.77 37.698-6.46 65.83-24.72 87.97-14.595 17.7-36.19 30.747-67.28 42.813 8.69 1.658 17.214 3.225 26.53 5.25 14.048 3.052 27.912 6.338 39.033 9.25 5.56 1.455 10.44 2.826 14.374 4.062 1.94.61 3.533 1.074 5.03 1.625 35.245-13.464 55.78-32.897 68.345-58.72 11.944-24.55 16.287-55.713 16.936-92.25h-78.25zm89.25 69.44c-1.632 6.425-3.532 12.668-5.812 18.686h257.03v-18.686H247.407z\"b fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class RulesIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'torch-icon',\n  template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" [ngStyle]=\"{width: width, height: heigth}\" style=\"height: 512px; width: 512px;\">\n      <g class=\"\" transform=\"translate(0,0)\" style=\"touch-action: none;\">\n        <path [attr.fill]=\"fill\" d=\"M256.53 19.094c-28.53 0-51.842 23.313-51.842 51.843 0 13.565 5.28 25.95 13.875 35.22l-110.532 78.53h296.814l-110.594-78.25c8.755-9.297 14.156-21.8 14.156-35.5 0-28.53-23.344-51.843-51.875-51.843zm0 18.687c18.432 0 33.19 14.727 33.19 33.157 0 9.792-4.177 18.538-10.845 24.594l-22.72-16.06-22.25 15.81c-6.497-6.044-10.53-14.687-10.53-24.343 0-18.43 14.726-33.156 33.156-33.156zM96.44 204l3.343 11.875 65.376 232.75 1.906 6.813h178.876l1.937-6.813 65.375-232.75L416.594 204H96.437zm24.656 18.688h270.812L331.78 436.75H181.25l-60.156-214.063zm146.187 16.687c29.012 47.73-76.807 70.517-60.155 133.75 11.2 25 29.146 41.394 50.22 42.03 48.84 0 73.57-53.528 60.75-99.842-4.847 24.07-24.934 34.845-34.876 22.375-24.115-30.248 36.436-56.768-15.94-98.313zM127.25 473.72v18.686h258.594V473.72H127.25z\" fill-opacity=\"1\"></path>\n      </g>\n    </svg>\n  `,\n})\nexport class TorchIcon {\n  @Input() fill: string;\n  @Input() width: number;\n  @Input() heigth: number;\n}\n"]}